openapi: 3.0.0
info:
  version: "1.1.0"
  termsOfService: "http://swagger.io/terms/"
  title: Countries API
  license:
    name: ISC
  contact:
    name: Maxi
    email: maximilianoraulguerrero@gmail.com
paths:
  "/report":
    get:
      tags:
        - Countries
      summary: Get report of countries
      description: Get a report of countries in the world.
      operationId: getReportCountries
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
  "/countries":
    get:
      tags:
        - Countries
      summary: get Countries
      description: Get countries
      operationId: getCountries
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/sort_dir"
      responses:
        "200":
          $ref: "#/components/responses/CountryRespose"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
servers:
  - url: https://api.example.com/v1
    description: Default
components:
  responses:
    Success:
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/StandardResponse"
    Unauthorized:
      description: Access token is missing or is invalid
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    InternalServerError:
      description: Internal server error
    CountryRespose:
      description: Country response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CountryRespose"
  schemas:
    StandardResponse:
      type: object
      properties:
        message:
          type: string
          example: Successful operation
        status:
          type: number
          example: 200
    CountryRespose:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              area:
                type: string
                example: 447400
              capital:
                type: string
                example: Tashkent
              continents:
                type: string
                example: Asia
              currencies:
                type: string
                example: "Uzbekistani so ªm"
              languages:
                type: string
                example: Russian
              name:
                type: string
                example: Uzbekistan
        page:
          type: number
          example: 1
        page_size:
          type: number
          example: 10
    Error:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/ErrorItem"
        status:
          type: number
          example: 400
    ErrorItem:
      type: object
      properties:
        key:
          type: string
          example: app.login.invalidPassword
        message:
          type: string
          example: Invalid user or password
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    page:
      name: page
      in: query
      description: Page number
      schema:
        type: number
        default: 0
    page_size:
      name: page_size
      in: query
      description: Limit the number of results
      required: false
      schema:
        type: integer
        minimum: 1
        default: 10
    sort:
      name: sort
      in: query
      description: Attribute to sort by
      schema:
        type: string
        enum:
          - area
          - capital
          - continents
          - currencies
          - languages
          - name
    sort_dir:
      name: sort_dir
      in: query
      description: Sorting direction
      schema:
        type: string
        enum:
          - ASC
          - DESC
